// Generated by CoffeeScript 1.11.1
(function() {
  var ChatBoxConnect;

  ChatBoxConnect = (function() {
    function ChatBoxConnect(chatApi, chatBox) {
      this.chatApi = chatApi;
      this.chatBox = chatBox;
    }

    ChatBoxConnect.prototype.start = function() {
      return this.chatApi.start((function(toUser) {
        this.toUser = toUser;
        this.initUsers();
        this.chatBox.build(this.chatApi.user, toUser, this.chatApi.chatId);
        this.chatApi.loadHistory();
        this.bindHistoryEvent();
        this.bindNewMessageEvent();
        return this.bindSendButton();
      }).bind(this));
    };

    ChatBoxConnect.prototype.initUsers = function() {
      this.users = {};
      this.users[this.chatApi.user._id] = this.chatApi.user;
      return this.users[this.toUser._id] = this.toUser;
    };

    ChatBoxConnect.prototype.bindNewUserMessagesEvent = function() {
      return this.chatApi.bind('newUserMessages', (function(data) {
        var j, len, message, ref, results;
        ref = data.messages;
        results = [];
        for (j = 0, len = ref.length; j < len; j++) {
          message = ref[j];
          this.chatBox.chatMessagesBox._addMessage(message.userId, message.message, message.createTime);
          results.push(this.chatBox.chatMessagesBox.scrollBottom());
        }
        return results;
      }).bind(this));
    };

    ChatBoxConnect.prototype.bindNewMessageEvent = function() {
      return this.chatApi.bind('newMessage', (function(data) {
        return this.chatBox.chatMessagesBox.addMessage(this.users[data.message.userId], data.message.message, data.message.createTime);
      }).bind(this));
    };

    ChatBoxConnect.prototype.bindHistoryEvent = function() {
      return this.chatApi.bind('historyLoaded', (function(messages) {
        var i, j, message, ref;
        for (i = j = ref = messages.length - 1; j >= 0; i = j += -1) {
          message = messages[i];
          this.chatBox.chatMessagesBox.addMessage(this.users[message.userId], message.message, message.createTime);
        }
        return setTimeout((function() {
          return this.chatBox.chatMessagesBox.scrollBottom();
        }).bind(this), 1000);
      }).bind(this));
    };

    ChatBoxConnect.prototype.bindSendButton = function() {
      return this.chatBox.sendMessageButton.button.addEvent('click', (function() {
        return this.sendMessage();
      }).bind(this));
    };

    ChatBoxConnect.prototype.sendMessage = function() {
      var message;
      message = this.chatBox.messageInputBox.input.get('value');
      if (!message) {
        return;
      }
      this.chatBox.messageInputBox.disable();
      this.chatBox.sendMessageButton.disable();
      return this.chatApi.sendMessage(message, (function() {
        this.chatBox.messageInputBox.cleanup();
        this.chatBox.messageInputBox.enable();
        return this.chatBox.sendMessageButton.enable();
      }).bind(this));
    };

    return ChatBoxConnect;

  })();

  window.ChatBoxConnect = ChatBoxConnect;

}).call(this);

//# sourceMappingURL=ChatBoxConnect.js.map
